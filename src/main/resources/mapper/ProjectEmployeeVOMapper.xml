<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.softwaredevelopment.achieveit.mapper.ProjectEmployeeVOMapper">

    <resultMap id="project_employee_vo" type="com.softwaredevelopment.achieveit.entity.ProjectEmployeeVO">
        <id column="id" property="id"/>
        <result column="project_id" property="projectId"/>
        <result column="employee_id" property="employeeId"/>
        <result column="join_time" property="joinTime"/>
        <result column="exit_time" property="exitTime"/>
        <result column="superior_id" property="superiorId"/>
        <association property="employeeBasics" resultMap="employee"/>
        <association property="superiorBasics" resultMap="superior"/>
        <collection property="roles" resultMap="role"/>
        <collection property="permissions" resultMap="permission"/>
    </resultMap>

    <resultMap id="employee" type="com.softwaredevelopment.achieveit.PO.entity.EmployeeBasics">
        <id column="employee_key" property="id"/>
        <result column="employee_id" property="employeeId" />
        <result column="employee_name" property="name"/>
        <result column="employee_email_address" property="emailAddress"/>
        <result column="employee_department" property="department"/>
        <result column="employee_tel" property="tel"/>
    </resultMap>

    <resultMap id="superior" type="com.softwaredevelopment.achieveit.PO.entity.EmployeeBasics">
        <id column="superior_key" property="id"/>
        <result column="superior_id" property="employeeId" />
        <result column="superior_name" property="name"/>
        <result column="superior_email_address" property="emailAddress"/>
        <result column="superior_department" property="department"/>
        <result column="superior_tel" property="tel"/>
    </resultMap>

    <resultMap id="role" type="com.softwaredevelopment.achieveit.PO.entity.RoleBasics">
        <id column="role_id" property="id"/>
        <result column="role_name" property="name"/>
        <result column="role_detail" property="detail"/>
    </resultMap>

    <resultMap id="permission" type="com.softwaredevelopment.achieveit.PO.entity.PermissionBasics">
        <id column="permission_id" property="id"/>
        <result column="permission_name" property="name"/>
        <result column="permission_detail" property="detail"/>
    </resultMap>

    <select id="selectProjectEmployeesByProjectId" resultMap="project_employee_vo">
        SELECT project_employee.id,
               project_employee.project_id,
               project_employee.employee_id,
               project_employee.join_time,
               project_employee.exit_time,
               project_employee.superior_id,
               role_basics.id                AS role_id,
               role_basics.`name`            AS role_name,
               role_basics.detail            AS role_detail,
               employee_basics.id            AS employee_id,
               employee_basics.`name`        AS employee_name,
               employee_basics.email_address AS employee_email_address,
               employee_basics.department    AS employee_department,
               employee_basics.tel           AS employee_tel,
               employee_basics.id            AS superior_id,
               employee_basics.`name`        AS superior_name,
               employee_basics.email_address AS superior_email_address,
               employee_basics.department    AS superior_department,
               employee_basics.tel           AS superior_tel,
               permission_basics.id          AS permission_id,
               permission_basics.`name`      AS permission_name,
               permission_basics.detail      AS permission_detail
        FROM project_employee
                 LEFT JOIN
             person_role
             ON
                 project_employee.id = person_role.project_employee_id
                 INNER JOIN
             role_basics
             ON
                 person_role.role_id = role_basics.id
                 LEFT JOIN
             employee_basics
             ON
                 project_employee.employee_id = employee_basics.id
                 LEFT JOIN
             employee_basics AS superior_basics
             ON
                 project_employee.superior_id = employee_basics.id
                 LEFT JOIN
             person_permission
             ON
                 project_employee.id = person_permission.project_employee_id
                 INNER JOIN
             permission_basics
             ON
                 person_permission.permission_id = permission_basics.id
                 INNER JOIN
             project_basics
             ON
                 project_employee.project_id = project_basics.id
        WHERE project_basics.project_id = #{projectId}
    </select>

    <select id="selectProjectEmployeeIds" resultType="java.lang.Integer">
        SELECT TA.id
        FROM (
            SELECT A.*
            FROM project_employee A
            WHERE A.project_id = #{projectId}
            AND A.id IN (
                SELECT E.project_employee_id id
                FROM (
                    SELECT C.id
                        FROM role_basics C
                        WHERE C.name &lt;&gt; 'ROLE_SUPERIOR'
                            AND C.name NOT LIKE 'ROLE_GLOBAL_%'
                            <if test="roles != null and roles.size() > 0">
                                AND C.name in
                                <foreach collection="roles" item="role" open="(" close=")" separator=",">
                                    #{role}
                                </foreach>
                            </if>
                ) D
                JOIN person_role E
                ON D.id = E.role_id
            )
        ) TA
        JOIN employee_basics TB
        ON TA.employee_id = TB.id
        <if test="employeeId != null and employeeId != ''">
            AND TB.employee_id LIKE '%${employeeId}%'
        </if>
        <if test="employeeName != null and employeeName != ''">
            AND TB.name LIKE '%${employeeName}%'
        </if>
        ORDER BY TA.exit_time, TA.join_time, TB.name
    </select>

    <select id="selectProjectEmployeeVO" resultMap="project_employee_vo">
        SELECT A.*,

            B.employee_id employee_id,
            B.name employee_name,
            B.email_address employee_email_address,
            B.department employee_department,
            B.tel employee_tel,

            D.id role_id,
            D.name role_name,
            D.detail role_detail,

            F.id permission_id,
            F.name permission_name,
            F.detail permission_detail,

            H.employee_id superior_id,
            H.name superior_name,
            H.email_address superior_email_address,
            H.department superior_department,
            H.tel superior_tel

        FROM (
            SELECT id, project_id, employee_id employee_key, join_time, exit_time, superior_id superior_key
            FROM project_employee
            WHERE id IN
                <foreach collection="projectEmployeeIds" item="projectEmployeeId" open="(" close=")" separator=",">
                    #{projectEmployeeId}
                </foreach>
        ) A
        JOIN employee_basics B
        ON A.employee_key = B.id
        LEFT JOIN person_role C
        ON A.id = C.project_employee_id
        LEFT JOIN role_basics D
        ON C.role_id = D.id
        LEFT JOIN person_permission E
        ON A.id = E.project_employee_id
        LEFT JOIN permission_basics F
        ON E.permission_id = F.id
        LEFT JOIN employee_basics H
        ON A.superior_key = H.id
        ORDER BY A.exit_time, A.join_time, B.name
    </select>

</mapper>
